// Framework by Chris Moy
// Big Corporation Digital Collective

//

// Table of Contents
// Framework Settings

// a. Base
// b. Media Queries
// c. Grid
// d. Typography
//  . Main
// - - - - - - - - - - - - - - - - - - - - - - - - -

// a. Base
// - - - - - - - - - - - - - - - - - - - - - - - - -

// Units
$base-unit: 4rem;
$golden-ratio: 1.61803398875;
$gr: $golden-ratio;
$golden-inverse: 0.61803398875;
$gi: $golden-ratio;

// Border

$base-radius: 0.3rem !default;

// Colors

$color: (
  primary: black,
  secondary: black,
  tertiary: black
) !default;

// Spacing

$base-spacing: (
  margin: $base-spacing,
  padding: $base-spacing
) !default;

// Transitions

$base-transition: (
  time: 0.2s,
  function: ease-in-out,
  forward-function: ease-in-out,
  reverse-function: ease-in-out
) !default;

// Typography

$base-font-size: 16px;

@function font-sizer(
  $font-size: 16px,
  $gap: false,
  $depth: 0
) {
  @if $gap {
    $mult: ((1 + $gr) / 2) * $font-size;
  } @else {
    $mult: $font-size;
  }

  @for i from 1 through $depth {
    $mult: $mult * $gr;
  }

  @debug $mult;
  @return $mult;
}

$type-size: (
  base: $base-font-size,
  h6: font-sizer($base-font-size, false, 0),
  h5: font-sizer($base-font-size, true, 0),
  h4: font-sizer($base-font-size, false, 1),
  h3: font-sizer($base-font-size, true, 1),
  h2: font-sizer($base-font-size, false, 2),
  h1: font-sizer($base-font-size, true, 2),
  small: (2 / (1 + $golden-ratio)) * $base-font-size
) !default;

$type-style: (
  line-height: 1,
  sans-serif: (Arial, Helvetica, sans-serif),
  serif: (Georgia, Times, 'Times New Roman', serif)
) !default;

// b. Media Queries
// - - - - - - - - - - - - - - - - - - - - - - - - -

// Breakpoints

$view-breakpoint: (
  xl: 999999999px,
  lg: 1200px,
  md: 1024px,
  sm: 640px
) !default;

// Ranges

$view-range: (
  sm: (0px, map-get($view-breakpoint, sm)),
  md: (map-get($view-breakpoint, sm) + 1px, map-get($view-breakpoint, md)),
  lg: (map-get($view-breakpoint, md) + 1px, map-get($view-breakpoint, lg)),
  xl: (map-get($view-breakpoint, lg) + 1px, map-get($view-breakpoint, xl))
) !default;

// Screen Options

$screen: "only screen" !default;

$landscape: "#{$screen} and (orientation: landscape)" !default;
$portrait: "#{$screen} and (orientation: portrait)" !default;

// Screen Ranges

$screen-range: (
  sm-up: $screen,
  sm-only: "#{$screen} and (max-width: #{map-get($view-breakpoint, sm)})",
  md-up: "#{$screen} and (min-width:#{map-get($view-breakpoint, sm) + 1px})",
  md-only: "#{$screen} and (min-width:#{lower-bound(map-get($view-range, md))}) and (max-width:#{upper-bound(map-get($view-range, md))})",
  lg-up: "#{$screen} and (min-width:#{map-get($view-breakpoint, md)})",
  lg-only: "#{$screen} and (min-width:#{lower-bound(map-get($view-range, lg))}) and (max-width:#{upper-bound(map-get($view-range, lg))})",
  xl-up: "#{$screen} and (min-width:#{map-get($view-breakpoint, lg)})",
  xl-only: "#{$screen} and (min-width:#{lower-bound(map-get($view-range, xl))}) and (max-width:#{upper-bound(map-get($view-range, xl))})"
) !default;

// c. Grid
// - - - - - - - - - - - - - - - - - - - - - - - - -

// $col-groups are the column groups you want
// For example, $col-groups: (3, 4, 5) will output:
// .col-Nof3, .col-Nof4, .col-Nof5

$column-groups: (12) !default;

// Gutter-Width

$gutter-width: (
  grid: (
    horiz: $base-unit,
    vert: $base-unit
  ),
  column: (
    horiz: $base-unit,
    vert: $base-unit
  )
) !default;

// Namespaces

$namespace: (
  column: "col",
  grid: "row"
) !default;

// Column alignment. Defaults to left (columns rendered in order from left to
// right). Set $align-right: true to align to the right.

$align-right: false !default;

// d. Typography
// - - - - - - - - - - - - - - - - - - - - - - - - -

$body-font-size: $base-font !default;

// . Button
// - - - - - - - - - - - - - - - - - - - - - - - - -

$btn-sizing: (
  height: (
    sm: $golden-inverse * map-get($navbar-height, sm),
    md: $golden-inverse * map-get($navbar-height, md),
    lg: $golden-inverse * map-get($navbar-height, lg)
  )
) !default;

// . Main
// - - - - - - - - - - - - - - - - - - - - - - - - -

// . Navbar
// - - - - - - - - - - - - - - - - - - - - - - - - -

$navbar-color: map-get($color, primary);

$navbar-type: (
  horizontal: (
    height: (
      sm: 5rem,
      md: 6rem,
      lg: 7rem
    ),
    width: 100%
  ),
  vertical: (
    height: 100%,
    width: (1 - $golden-inverse) * 100%
  )
) !default;

$navbar-position: (
  bottom: (bottom: 0, left: 0),
  left: (left: 0, top: 0),
  right: (right: 0, top: 0),
  top: (left: 0, top: 0)
) !default;

$navbar-hambar: (
  sm: 0.2rem,
  md: 0.4rem,
  lg: 0.4rem
) !default;

$navbar-padding: (
  sm: (1 - $golden-inverse) / 2 * map-get($navbar-height, sm),
  md: (1 - $golden-inverse) / 2 * map-get($navbar-height, md),
  lg: (1 - $golden-inverse) / 2 * map-get($navbar-height, lg)
) !default;
