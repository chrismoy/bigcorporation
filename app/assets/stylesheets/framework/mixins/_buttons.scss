/// Returns the base sizing attributes for a button
///
/// @param {String} $modifier [null]
/// $size: The name for the size modifier of the column classes (sm, md, lg, xl, etc)
///

@mixin btn-base(
  $modifier: null
) {

  $error: string-error($modifier);

  $font-size: scale-font($btn-font-size, $modifier);
  $dimension: scale-sf($font-size);
  $btn-padding: 0.5 * ($dimension - $font-size);

  @include rem(border-radius, $base-radius);
  @include rem(font-size, $font-size);
  @include rem(padding, scale-spacing($btn-padding, $modifier));

  &-noText { @include rem(height, $dimension); }

  &-large {
    $font-size: scale-font($btn-font-size-lg, $modifier);
    $dimension: scale-sf($font-size);
    $btn-padding: 0.5 * ($dimension - $font-size);

    @include rem(font-size, $font-size);
    @include rem(padding, scale-spacing($btn-padding, $modifier));
  }

  &-square { @include rem(width, $dimension); }
}

/// Returns the viewport-dependent sizing attributes for a hamburger button
///
/// @param {String} $modifier [null]
/// $size: The name for the size modifier of the column classes (sm, md, lg, xl, etc)
///

@mixin hamburger(
  $modifier: null
) {

  $error: string-error($modifier);

  $font-size: scale-font($btn-font-size, $modifier);

  &-hamburger {
    border-radius: 0;
    padding: 0;

    &_prompt {
      @include rem(font-size, $font-size);
      @include rem(margin-top, -0.5 * $font-size);
    }

    &_bar, &:before, &:after {
      @include rem(height, scale-hambar($modifier));
    }

    &_bar {
      @include rem(margin-top, -0.5 * scale-hambar($modifier));
    }

    &-active {
      &:before, &:after {
        margin-top: -0.5 * scale-hambar($modifier);
      }
    }
  }
}
